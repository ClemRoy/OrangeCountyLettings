version: 2.1
orbs:
  python: circleci/python@2.1.1
  docker: circleci/docker@2.2.0
  heroku: circleci/heroku@2.0.0
jobs:
  build:
    docker:
      - image: cimg/python:3.10.2
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
        requirements-file: requirements.txt
      - persist_to_workspace:
          root: "~"
          paths:
            - .

  test:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - attach_workspace:
          at: "~"
      - run: python -m pytest
      - run: flake8

  build_and_push_docker:
    executor: docker/docker
    steps:
      - attach_workspace:
          at: "~"
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Build and push docker image
          command: |
            echo $DOCKERHUB_USERNAME
            docker build -t clementroy/orangecountylettings:latest .
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push clementroy/orangecountylettings:latest


  deploy_on_heroku:
    executor: heroku/default
    steps:
      - attach_workspace:
          at: "~"
      - setup_remote_docker:
          version: 20.10.7
      - heroku/install
      - run:
          name: Create Heroku app (if it doesn't exist)
          command: |
            heroku apps:info -a orangecountylettings || heroku apps:create orangecountylettings --region eu
      - run:
          name: Deploy to Heroku
          command: |
            heroku container:login
            docker pull clementroy/orangecountylettings:latest
            docker tag clementroy/orangecountylettings:latest registry.heroku.com/orangecountylettings/web
            docker push registry.heroku.com/orangecountylettings/web
            heroku container:release web -a orangecountylettings
      - run:
          name: Create release and notify Sentry of deploy
          command: |
            echo $SENTRY_ORG
            echo $SENTRY_PROJECT
            SENTRY_ENVIRONMENT: production
            echo $SENTRY_ENVIRONMENT
            curl -sL https://sentry.io/get-cli/ | bash
            export SENTRY_RELEASE=$(sentry-cli releases propose-version)
            sentry-cli releases new -p $SENTRY_PROJECT $SENTRY_RELEASE
            sentry-cli releases set-commits $SENTRY_RELEASE --auto
            sentry-cli releases files $SENTRY_RELEASE upload-sourcemaps path-to-sourcemaps-if-applicable
            sentry-cli releases finalize $SENTRY_RELEASE
            sentry-cli releases deploys $SENTRY_RELEASE new -e $SENTRY_ENVIRONMENT

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build         
      - test:
          requires:
            - build
      - build_and_push_docker:
          requires:
            - build
            - test
          filters:
            branches:
              only:
                - master
      - deploy_on_heroku:
          requires:
            - build
            - test
            - build_and_push_docker
          filters:
            branches:
              only:
                - master